#include <iostream>
#include <fstream>
#include <windows.h>

using namespace std;

void abc(int** a1, int** a2, int as1, int as2, int** b, int c = NULL)
{
    b[as1][as2] = 1;
    if (as2 >= 0)
    {
        if (c != NULL)
        {
            if (a2[as1][as2] == 3)
                abc(a1, a2, as1, as2 - 1, b);
            else if (a2[as1][as2] == 4)
                abc(a1, a2, as1 - 1, as2 - 1, b);
            else if (a2[as1][as2] == 5)
                abc(a1, a2, as1 + 1, as2 - 1, b);
        }
        else
        {
            if (a1[as1][as2] == 1)
                abc(a1, a2, as1 - 1, as2, b, 1);
            else if (a1[as1][as2] == 2)
                abc(a1, a2, as1 + 1, as2, b, 2);
            else if (a1[as1][as2] == 3)
                abc(a1, a2, as1, as2 - 1, b);
            else if (a1[as1][as2] == 4)
                abc(a1, a2, as1 - 1, as2 - 1, b);
            else if (a1[as1][as2] == 5)
                abc(a1, a2, as1 + 1, as2 - 1, b);
        }
    }
}


int main()
{
    fstream f("check.txt");
    int N1, N2;
    f >> N1;
    f >> N2;
    int** a = new int* [N1];
    int** path1 = new int* [N1];
    int** path2 = new int* [N1];
    int** b = new int* [N1];
    int** pathf = new int* [N1];

    for (int i = 0; i < N1; i++)
    {
        a[i] = new int[N2];
        path1[i] = new int[N2];
        path2[i] = new int[N2];
        b[i] = new int[N2];
        pathf[i] = new int[N2];
    }

    for (int i = 0; i < N1; i++)
    {
        for (int j = 0; j < N2; j++)
        {
            f >> a[i][j];
            path1[i][j] = 0;
            pathf[i][j] = 0;
        }
    }

    for (int i = 0; i < N1; i++)
    {
        b[i][0] = a[i][0];
    }

    for (int i = 0; i < N1; i++)
    {
        if (i > 0 && a[i][0] + a[i - 1][0] < b[i][0])
        {
            b[i][0] += a[i - 1][0];
            path1[i][0] = 1;
        }
        if (i < N1 - 1 && a[i][0] + a[i + 1][0] < b[i][0])
        {
            b[i][0] = a[i][0] + a[i + 1][0];
            path1[i][0] = 2;
        }
    }

    for (int j = 1; j < N2; j++)
    {
        for (int i = 0; i < N1; i++)
        {
            b[i][j] = b[i][j - 1] + a[i][j];
            path1[i][j] = 3;
            if (i > 0 && b[i - 1][j - 1] + a[i][j] < b[i][j])
            {
                b[i][j] = b[i - 1][j - 1] + a[i][j];
                path1[i][j] = 4;
            }
            if (i < N1 - 1 && b[i + 1][j - 1] + a[i][j] < b[i][j])
            {
                b[i][j] = b[i + 1][j - 1] + a[i][j];
                path1[i][j] = 5;
            }
            if (j < N2 - 1)
            {
                if (i > 0 && b[i][j] + a[i - 1][j] < b[i][j])
                {
                    if (i < N1 - 1 && b[i][j] + a[i + 1][j] < b[i][j] + a[i - 1][j])
                    {
                        b[i][j] += a[i + 1][j];
                        path2[i][j] = path1[i][j];
                        path1[i][j] = 2;
                    }
                    else
                    {
                        b[i][j] += a[i - 1][j];
                        path2[i][j] = path1[i][j];
                        path1[i][j] = 1;
                    }
                }
                else if (i < N1 - 1 && b[i][j] + a[i + 1][j] < b[i][j])
                {
                    b[i][j] += a[i + 1][j];
                    path2[i][j] = path1[i][j];
                    path1[i][j] = 2;
                }
            }
        }
    }
    int min = INT_MAX, nmin = 0;
    for (int i = 0; i < N1; i++)
    {
        if (b[i][N2 - 1] < min)
        {
            min = b[i][N2 - 1];
            nmin = i;
        }
    }

    abc(path1, path2, nmin, N2 - 1, pathf);

    for (int i = 0; i < N1; i++)
    {
        for (int j = 0; j < N2; j++)
        {
            cout.width(4);
            if (pathf[i][j] == 1)
            {
                cout << "\033[32m";
                cout.width(4);
                cout << a[i][j];
                cout << "\033[0m";
            }
            else
                cout << a[i][j];
        }
        cout << endl;
    }



    cout << min << endl;

    system("Pause");

    return 0;
}

